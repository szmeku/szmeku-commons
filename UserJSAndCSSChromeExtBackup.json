{"libs":[{"name":"jQuery 3","src":"@extension@jquery.min.js"},{"name":"momentjs","src":"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.3/moment.min.js"},{"name":"ramdajs","src":"https://cdnjs.cloudflare.com/ajax/libs/ramda/0.28.0/ramda.js"},{"name":"myLib","src":"https://gitcdn.link/cdn/szmeku/szmeku-commons/main/commons.js?1"}],"settings":{"badgeCounter":false,"editorConfig":{"enableBasicAutocompletion":false,"enableLiveAutocompletion":true,"enableSnippets":true,"fontSize":15,"highlightActiveLine":false,"keyboardHandler":false,"showPrintMargin":false,"tabSize":4,"theme":"ace/theme/tomorrow","useSoftTabs":false,"useWorker":true,"wrap":true},"supportBtn":false,"themesFolder":["chrome","clouds","dawn","dracula","dreamweaver","eclipse","github","monokai","solarized_dark","solarized_light","textmate","tomorrow","tomorrow_night","twilight"],"version":8},"sites":[{"compiledCss":"","css":"","id":"http://localhost:8080/__admin/recorder/","js":"(function () {\r\n    const urls = {\r\n        uat: \"http://10.39.91.175:30030/goose-bff-service\",\r\n        dev: \"http://10.39.89.234:30030/goose-bff-service\",\r\n        tst: \"http://10.39.91.184:30030/goose-bff-service\"\r\n    };\r\n\r\n    const content = document.querySelector('.content');\r\n\r\n    for (let env in urls) {\r\n\r\n        const label = document.createTextNode(env);\r\n\r\n        const inp = document.createElement(\"input\");\r\n        inp.type = 'text';\r\n        inp.value = urls[env];\r\n\r\n        content.prepend(inp);\r\n        content.prepend(label);\r\n    }\r\n})()\r\n","libs":[],"name":"","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"http://10.39.89.234:30030/","js":"(function(){\n\t\n\tlet btn = document.createElement(\"button\");\n\tbtn.innerHTML = \"Expand all\";\n\tbtn.addEventListener(\"click\", function () {\n\tdocument.querySelectorAll('.expand-operation').forEach(v => v.click());  \n});\n\tdocument.body.prepend(btn);\n})()\n","libs":[],"name":"","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"*","js":"function main() {\n\t\n}\n","libs":["momentjs","ramdajs","myLib"],"name":"","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":false}},{"compiledCss":"","css":"","id":"https://jira.gene.com/jira/secure/TimesheetReport.jsp*","js":"function main() {\n\tcommons.addButton('this week', function(){\n\t\tcommons.replaceUrlSearchParam(\n\t\t\t'startDate',\n\t\t\tcommons.thisWeek[0]\n\t\t)\n\t\t\n\t\tcommons.replaceUrlSearchParam(\n\t\t\t'endDate',\n\t\t\tcommons.thisWeek[1]\n\t\t)\n\t\t\n\t\tcommons.reloadPage()\n\t})\n\t\n\t\n\tcommons.addButton('previous week', function(){\n\t\tcommons.replaceUrlSearchParam(\n\t\t\t'startDate',\n\t\t\tcommons.previousWeek[0]\n\t\t)\n\t\t\n\t\tcommons.replaceUrlSearchParam(\n\t\t\t'endDate',\n\t\t\tcommons.previousWeek[1]\n\t\t)\n\t\t\n\t\tcommons.reloadPage()\n\t})\n}\nwindow.onload = main;\n\n","libs":["momentjs","ramdajs","myLib"],"name":"","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"https://gist.github.com/","js":"(function () {\r\n    function urlsToAbsolute(nodeList) {\r\n        if (!nodeList.length) {\r\n            return [];\r\n        }\r\n        var attrName = 'href';\r\n        if (nodeList[0].__proto__ === HTMLImageElement.prototype || nodeList[0].__proto__ === HTMLScriptElement.prototype) {\r\n            attrName = 'src';\r\n        }\r\n        nodeList = [].map.call(nodeList, function (el, i) {\r\n            var attr = el.getAttribute(attrName);\r\n            if (!attr) {\r\n                return;\r\n            }\r\n            var absURL = /^(https?|data):/i.test(attr);\r\n            if (absURL) {\r\n                return el;\r\n            } else {\r\n                return el;\r\n            }\r\n        });\r\n        return nodeList;\r\n    }\r\n\r\n    function screenshotPage() {\r\n        urlsToAbsolute(document.images);\r\n        urlsToAbsolute(document.querySelectorAll(\"link[rel='stylesheet']\"));\r\n        var screenshot = document.documentElement.cloneNode(true);\r\n        var b = document.createElement('base');\r\n        b.href = document.location.protocol + '//' + location.host;\r\n        var head = screenshot.querySelector('head');\r\n        head.insertBefore(b, head.firstChild);\r\n        screenshot.style.pointerEvents = 'none';\r\n        screenshot.style.overflow = 'scroll';\r\n        screenshot.style.webkitUserSelect = 'none';\r\n        screenshot.style.mozUserSelect = 'none';\r\n        screenshot.style.msUserSelect = 'none';\r\n        screenshot.style.oUserSelect = 'none';\r\n        screenshot.style.userSelect = 'none';\r\n        screenshot.dataset.scrollX = window.scrollX;\r\n        screenshot.dataset.scrollY = window.scrollY;\r\n        var script = document.createElement('script');\r\n        script.textContent = '(' + addOnPageLoad_.toString() + ')();';\r\n        screenshot.querySelector('body').appendChild(script);\r\n        var blob = new Blob([screenshot.outerHTML], {\r\n            type: 'text/html'\r\n        });\r\n        return blob;\r\n    }\r\n\r\n    function addOnPageLoad_() {\r\n        window.addEventListener('DOMContentLoaded', function (e) {\r\n            var scrollX = document.documentElement.dataset.scrollX || 0;\r\n            var scrollY = document.documentElement.dataset.scrollY || 0;\r\n            window.scrollTo(scrollX, scrollY);\r\n        });\r\n    }\r\n\r\n    function saveChangeAndScreenshot(html) {\r\n        const now = new Date().toString();\r\n        window.URL = window.URL || window.webkitURL;\r\n        localStorage.setItem(`lobby.screenshot.${now}`, window.URL.createObjectURL(screenshotPage()))\r\n        localStorage.setItem(`lobby.html.${now}`, html)\r\n    }\r\n\r\n    let lastPageHtml = '';\r\n    window.addEventListener('DOMContentLoaded', function (e) {\r\n\r\n        setInterval(() => {\r\n\r\n            if (lastPageHtml !== document.querySelector('body').innerHTML) {\r\n                lastPageHtml = document.querySelector('body').innerHTML;\r\n                saveChangeAndScreenshot(lastPageHtml);\r\n            }\r\n\r\n        }, 100)\r\n    })\r\n})();\r\n","libs":[],"name":"","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"https://bitbucket.roche.com/stash/projects/MPSS/repos/*/pull-requests/*/diff*","js":"\nwindow.onload = (event) => {\n    commons.addButton('fullscreen', () => {\n\t\tdocument.querySelector('header').remove()\n\t\tdocument.querySelector('#aui-sidebar-content').remove()\n\t\tdocument.querySelector('.pull-request-header').remove()\n\t\tdocument.querySelector('.tabs-pane.active-pane > div').style.height='auto';\n\t})\n};","libs":["ramdajs","myLib"],"name":"","options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}}]}
